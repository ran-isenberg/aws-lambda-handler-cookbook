[tool.poetry]
name = "aws_lambda_handler_cookbook"
version = "3.0.0"
description = "This repository provides a working, deployable, open source based, AWS Lambda handler and CDK Python code. This handler embodies Serverless best practices and has all the bells and whistles for a proper production ready handler"
authors = ["Ran Isenberg"]
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]
repository="https://github.com/ran-isenberg/aws-lambda-handler-cookbook"
readme = "README.md"
keywords = ["aws lambda cookbook", "guide to aws lambda", "cdk template", "best practices", "serverless service template"]
license = "MIT-0"

[tool.poetry.dependencies]
python = "^3.11.0"
pydantic = {version = "^2.0.3"}
email-validator = {version = "*"}
aws-lambda-powertools =  {extras = ["tracer"],version = "^2.20.0"}
mypy-boto3-dynamodb = "*"
cachetools = "*"
boto3 = "^1.26.125"
aws-lambda-env-modeler = "*"

[tool.poetry.dev-dependencies]
# CDK
service-cdk = {path = "cdk", develop = true}
aws-cdk-lib = ">=2.99.0"
constructs = ">=10.0.0"
cdk-nag = ">2.0.0"
"aws-cdk.aws-lambda-python-alpha" = "^2.99.0-alpha.0"
"aws-cdk.aws-appconfig-alpha" = "^2.99.0-alpha.0"
cdk-monitoring-constructs = "*"
# DEV
pytest = "*"
pytest-mock = "*"
pycodestyle = "*"
pytest-cov = "*"
pytest-html = "*"
python-dateutil = "*"
python-dotenv = "*"
GitPython = "*"
ruff = "*"
radon = "*"
xenon = "*"
pre-commit = "*"
mkdocs-material = "*"
mkdocs-git-revision-date-plugin = "*"
types-cachetools = "*"
mypy = "*"
types-requests = "*"
toml = "*"
poetry-plugin-export = "*"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "cdk.out",
    ".vscode",
    ".pytest_cache",
    ".build",
    ".mypy_cache",
    ".github"
]

# Same as Black.
line-length = 150
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [ "E203", "E266", "E501", "W191"]

[tool.ruff.format]
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.isort]
known-third-party = ["pydantic", "aws_lambda_powertools"]
