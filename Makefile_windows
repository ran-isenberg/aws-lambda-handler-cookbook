.PHONY: deploy destroy format lint install build tests unit_tests dev_deploy docs
.DEFAULT_GOAL := help
STACK_NAME := serverless-service
SERVICE_NAME := service
PYTHON := python

help:
	@echo "Please use 'make <target>' where <target> is one of"
	@echo ""
	@echo "  install     install the package and the dev dependencies in development mode"
	@echo "  clean       clean up build, python artifacts, and the venv"
	@echo "  lint        run pre-commit, lint package and tests"
	@echo "  test        run tests quickly with the default Python"
	@echo "  unit_tests  run only unit tests"
	@echo "  int_tests   run only integration tests"
	@echo "  build       build lambda package with dependencies"
	@echo "  deploy      deploy service using the CFN template"
	@echo "  dev_deploy  deploy service using the dev profile"
	@echo "  diff        diff local CDK stack with deployed stack"
	@echo "  publish_docs publish service documentation to GitHub pages (From main branch only)"
	@echo "  docs        build and serve the documentation for review in browser"
	@echo "  destroy     delete the stack from AWS"
	@echo "  dev_destroy delete the stack from AWS with the dev profile"
	@echo "  all_destroy destroy all related CDK stacks"
	@echo "  check_template check CDK template integrity"

install:
	pip install -e .[dev,docs]

clean:
	rmdir /s /q dist
	rmdir /s /q build
	rmdir /s /q .eggs
	rmdir /s /q .pytest_cache
	rmdir /s /q .coverage
	rmdir /s /q cdk\cdk.out
	rmdir /s /q htmlcov
	rmdir /s /q docs\site
	rmdir /s /q .mypy_cache
	rmdir /s /q *.egg-info
	del /q /s *.pyc

lint:
	pre-commit run --all-files

build:
	$(PYTHON) -m cdk.service.api synth

diff:
	$(PYTHON) -m cdk.service.api diff

deploy:
	$(PYTHON) -m cdk.service.api deploy --require-approval never

dev_deploy:
	$(PYTHON) -m cdk.service.api deploy --require-approval never --profile dev

destroy:
	$(PYTHON) -m cdk.service.api destroy --force

dev_destroy:
	$(PYTHON) -m cdk.service.api destroy --force --profile dev

all_destroy:
	aws cloudformation delete-stack --stack-name $(STACK_NAME)

check_template:
	cfn-lint cdk/cdk.out/$(STACK_NAME).template.json

snapshot:
	$(PYTHON) -m cdk.service.api synth > template.yml

publish_docs:
	mkdocs gh-deploy

docs:
	mkdocs serve

tests: lint unit_tests int_tests

unit_tests:
	pytest tests/unit -xvs

int_tests:
	pytest tests/integration -xvs

generate_api:
	$(PYTHON) generate_openapi.py > docs/api/schema.json